***REMOVED***
***REMOVED*** There is insufficient memory for the Java Runtime Environment to continue.
***REMOVED*** Native memory allocation (mmap) failed to map 754974720 bytes for committing reserved memory.
***REMOVED*** Possible reasons:
***REMOVED***   The system is out of physical RAM or swap space
***REMOVED***   The process is running with CompressedOops enabled, and the Java Heap may be blocking the growth of the native heap
***REMOVED*** Possible solutions:
***REMOVED***   Reduce memory load on the system
***REMOVED***   Increase physical memory or swap space
***REMOVED***   Check if swap backing store is full
***REMOVED***   Decrease Java heap size (-Xmx/-Xms)
***REMOVED***   Decrease number of Java threads
***REMOVED***   Decrease Java thread stack sizes (-Xss)
***REMOVED***   Set larger code cache with -XX:ReservedCodeCacheSize=
***REMOVED***   JVM is running with Zero Based Compressed Oops mode in which the Java heap is
***REMOVED***     placed in the first 32GB address space. The Java Heap base address is the
***REMOVED***     maximum limit for the native heap growth. Please use -XX:HeapBaseMinAddress
***REMOVED***     to set the Java Heap base and to place the Java Heap above 32GB virtual address.
***REMOVED*** This output file may be truncated or incomplete.
***REMOVED***
***REMOVED***  Out of Memory Error (os_linux.cpp:2749), pid=25305, tid=0x00007f5ab28b7700
***REMOVED***
***REMOVED*** JRE version: Java(TM) SE Runtime Environment (8.0_211-b12) (build 1.8.0_211-b12)
***REMOVED*** Java VM: Java HotSpot(TM) 64-Bit Server VM (25.211-b12 mixed mode linux-amd64 compressed oops)
***REMOVED*** Failed to write core dump. Core dumps have been disabled. To enable core dumping, try "ulimit -c unlimited" before starting Java again
***REMOVED***