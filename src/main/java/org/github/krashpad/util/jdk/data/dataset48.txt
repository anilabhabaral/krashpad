***REMOVED***
***REMOVED*** There is insufficient memory for the Java Runtime Environment to continue.
***REMOVED*** Native memory allocation (mmap) failed to map 12288 bytes for committing reserved memory.
***REMOVED*** Possible reasons:
***REMOVED***   The system is out of physical RAM or swap space
***REMOVED***   The process is running with CompressedOops enabled, and the Java Heap may be blocking the growth of the native heap
***REMOVED*** Possible solutions:
***REMOVED***   Reduce memory load on the system
***REMOVED***   Increase physical memory or swap space
***REMOVED***   Check if swap backing store is full
***REMOVED***   Decrease Java heap size (-Xmx/-Xms)
***REMOVED***   Decrease number of Java threads
***REMOVED***   Decrease Java thread stack sizes (-Xss)
***REMOVED***   Set larger code cache with -XX:ReservedCodeCacheSize=
***REMOVED***   JVM is running with Unscaled Compressed Oops mode in which the Java heap is
***REMOVED***     placed in the first 4GB address space. The Java Heap base address is the
***REMOVED***     maximum limit for the native heap growth. Please use -XX:HeapBaseMinAddress
***REMOVED***     to set the Java Heap base and to place the Java Heap above 4GB virtual address.
***REMOVED*** This output file may be truncated or incomplete.
***REMOVED***
***REMOVED***  Out of Memory Error (os_linux.cpp:2798), pid=1234, tid=0x0000120012345600
***REMOVED***
***REMOVED*** JRE version: OpenJDK Runtime Environment (8.0_265-b01) (build 1.8.0_265-b01)
***REMOVED*** Java VM: OpenJDK 64-Bit Server VM (25.265-b01 mixed mode linux-amd64 compressed oops)
***REMOVED*** Core dump written. Default location: /path/to/core or core.1234
***REMOVED***

***REMOVED***

Current thread (0x00007f008c20c000):  JavaThread "https-openssl-apr-12345-exec-12" daemon [_thread_new, id=12345, stack(0x00007f0077774000,0x00007f0077875000)]

Stack: [0x00007f0077774000,0x00007f0077875000],  sp=0x00007f0077873b40,  free space=1022k
***REMOVED***
V  [libjvm.so+0xb5718d]  VMError::report_and_die()+0x15d
V  [libjvm.so+0x50675a]  report_vm_out_of_memory(char const*, int, unsigned long, VMErrorType, char const*)+0xaa
V  [libjvm.so+0x93cfc0]  os::pd_commit_memory(char*, unsigned long, bool)+0xc0